pillars:
  _param:
    jenkins_salt_api_url: "http://${_param:salt_master_host}:6969"
  jenkins:
    client:
      view:
        Validation:
          enabled: true
          type: ListView
          include_regex: "validate.*"
      job:
        validate_openstack:
          type: workflow-scm
          name: validate-openstack
          display_name: "Validate - Openstack"
          discard:
            build:
              keep_num: 20
            artifact:
              keep_num: 20
          concurrent: false
          scm:
            type: git
            url: "${_param:jenkins_gerrit_url}/mk/mk-pipelines"
            branch: "${_param:jenkins_pipelines_branch}"
            credentials: "gerrit"
            script: validate-cloud.groovy
          param:
            SALT_MASTER_URL:
              type: string
              default: "${_param:jenkins_salt_api_url}"
              description: Full Salt API address [e.g. https://10.10.10.2:6969]
            SALT_MASTER_CREDENTIALS:
              type: string
              default: "salt"
              description: Credentials to the Salt API
            TEST_IMAGE:
              type: string
              default: "docker-prod-local.artifactory.mirantis.com/mirantis/oss/qa-tools"
              description: Docker image to setup testing environment
            TARGET_NODE:
              type: string
              default: ""
              description: Target node where this job will be executed from
            RUN_RALLY_TESTS:
              type: boolean
              default: 'true'
              description: If chosen then Rally tests will be executed
            RUN_TEMPEST_TESTS:
              type: boolean
              default: 'true'
              description: If chosen then Tempest tests will be executed
            RUN_K8S_TESTS:
              type: boolean
              default: 'true'
              description: If chosen then K8S tests will be executed
            TEMPEST_TEST_SET:
              type: choice
              choices:
                - smoke
                - full
              description: Set of Tempest tests to run
            TEMPEST_CONFIG_REPO:
              type: string
              default: ""
              description: Git repository with configuration files for Tempest
            TEMPEST_CONFIG_BRANCH:
              type: string
              default: ""
              description: Git branch which will be used during the checkout
            TEMPEST_REPO:
              type: string
              default: ""
              description: Git repository with Tempest
            TEMPEST_VERSION:
              type: string
              default: ""
              description: Version of Tempest (tag, branch or commit)
            TEST_K8S_NODE:
              type: string
              default: ""
              description: Kubernetes node to run tests from
            TEST_K8S_API_SERVER:
              type: string
              default: "http://127.0.0.1:8080"
              description: API server parameter for K8S tests
            TEST_K8S_CONFORMANCE_IMAGE:
              type: string
              default: "docker-dev-virtual.docker.mirantis.net/mirantis/kubernetes/k8s-conformance:v1.7.5-2_1504192939316"
              description: Docker image to run K8S tests
            RUN_SPT_TESTS:
              type: boolean
              default: 'true'
              description: If chosen then SPT tests will be executed
            SPT_SSH_USER:
              type: string
              default: "root"
              description: Username that is used to ssh between cluster nodes
            FLOATING_NETWORK:
              type: string
              default: ""
              description: External(floating) network name (used in both SPT and Rally)
            SPT_IMAGE:
              type: string
              default: ""
              description: Image that is used for network-VM-to-VM-iperf-tests tests
            SPT_IMAGE_USER:
              type: string
              default: ""
              description: Username that is used to ssh to SPT_IMAGE
            SPT_FLAVOR:
              type: string
              default: ""
              description: Flavor name for SPT_IMAGE (make sure you have required flavor created)
            RALLY_IMAGE:
              type: string
              default: "cirros"
            RALLY_FLAVOR:
              type: string
              default: "m1.tiny"
              description: Flavor name for Rally scenarios
            RALLY_CONFIG_REPO:
              type: string
              default: ""
              description: Git repository with configuration files for Rally
            RALLY_CONFIG_BRANCH:
              type: string
              default: ""
              description: Git branch which will be used during the checkout
            RALLY_SCENARIOS:
              type: string
              default: ""
              description: Rally scenarios directory or file with scenarios
            RALLY_TASK_ARGS_FILE:
              type: string
              default: ""
              description: Rally scenarios arguments file
            AVAILABILITY_ZONE:
              type: string
              default: "nova"
              description: Name of availability zone
            GENERATE_REPORT:
              type: boolean
              default: 'true'
              description: If chosen then at the end of the test run HTML report will be generated
            ACCUMULATE_RESULTS:
              type: boolean
              default: 'true'
              description: If chosen then previous build results will be used in the current build
        cvp-sanity:
          type: workflow-scm
          name: validate-cvp-sanity
          display_name: "CVP - Sanity checks"
          discard:
            build:
              keep_num: 20
            artifact:
              keep_num: 20
          concurrent: false
          scm:
            type: git
            url: "${_param:jenkins_gerrit_url}/mk/mk-pipelines"
            branch: "${_param:jenkins_pipelines_branch}"
            credentials: "gerrit"
            script: cvp-sanity.groovy
          param:
            SALT_MASTER_URL:
              type: string
              default: ""
              description: Full Salt API address [e.g. https://10.10.10.2:6969]
            SALT_MASTER_CREDENTIALS:
              type: string
              default: "salt"
            SANITY_TESTS_REPO:
              type: string
              default: "https://github.com/Mirantis/cvp-sanity-checks"
              description: Url for cvp-sanity-checks
            SANITY_TESTS_SET:
              type: string
              default: ""
              description: Leave empty for full run or choose a file, e.g. test_mtu.py
            PROXY:
              type: string
              default: ""
              description: Proxy address to clone repo and install python requirements
